//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tb_vol_scroll.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.1.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IgnoreTaskbarVisibility {
            get {
                return ((bool)(this["IgnoreTaskbarVisibility"]));
            }
            set {
                this["IgnoreTaskbarVisibility"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int NormalVolumeStep {
            get {
                return ((int)(this["NormalVolumeStep"]));
            }
            set {
                this["NormalVolumeStep"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int PreciseVolumeStep {
            get {
                return ((int)(this["PreciseVolumeStep"]));
            }
            set {
                this["PreciseVolumeStep"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int PreciseVolumeThreshold {
            get {
                return ((int)(this["PreciseVolumeThreshold"]));
            }
            set {
                this["PreciseVolumeThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TrayIconOverrideAutoSettings {
            get {
                return ((bool)(this["TrayIconOverrideAutoSettings"]));
            }
            set {
                this["TrayIconOverrideAutoSettings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Segoe UI Semibold, 36pt")]
        public global::System.Drawing.Font TrayIconFontStyle {
            get {
                return ((global::System.Drawing.Font)(this["TrayIconFontStyle"]));
            }
            set {
                this["TrayIconFontStyle"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("32")]
        public int TrayIconWidth {
            get {
                return ((int)(this["TrayIconWidth"]));
            }
            set {
                this["TrayIconWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("32")]
        public int TrayIconHeight {
            get {
                return ((int)(this["TrayIconHeight"]));
            }
            set {
                this["TrayIconHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int TrayIconXAlignment {
            get {
                return ((int)(this["TrayIconXAlignment"]));
            }
            set {
                this["TrayIconXAlignment"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SkyBlue")]
        public global::System.Drawing.Color TrayIconColorText {
            get {
                return ((global::System.Drawing.Color)(this["TrayIconColorText"]));
            }
            set {
                this["TrayIconColorText"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool TrayIconColorTextIsGradient {
            get {
                return ((bool)(this["TrayIconColorTextIsGradient"]));
            }
            set {
                this["TrayIconColorTextIsGradient"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int TrayIconTextRenderingHinting {
            get {
                return ((int)(this["TrayIconTextRenderingHinting"]));
            }
            set {
                this["TrayIconTextRenderingHinting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoRetryAdmin {
            get {
                return ((bool)(this["AutoRetryAdmin"]));
            }
            set {
                this["AutoRetryAdmin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool InvertScrollingDirection {
            get {
                return ((bool)(this["InvertScrollingDirection"]));
            }
            set {
                this["InvertScrollingDirection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShiftHotkeyEnabled {
            get {
                return ((bool)(this["ShiftHotkeyEnabled"]));
            }
            set {
                this["ShiftHotkeyEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CtrlHotkeyEnabled {
            get {
                return ((bool)(this["CtrlHotkeyEnabled"]));
            }
            set {
                this["CtrlHotkeyEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AltHotkeyEnabled {
            get {
                return ((bool)(this["AltHotkeyEnabled"]));
            }
            set {
                this["AltHotkeyEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1000")]
        public int AutoHideTimeOut {
            get {
                return ((int)(this["AutoHideTimeOut"]));
            }
            set {
                this["AutoHideTimeOut"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SkyBlue")]
        public global::System.Drawing.Color StatusBarColor {
            get {
                return ((global::System.Drawing.Color)(this["StatusBarColor"]));
            }
            set {
                this["StatusBarColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool StatusBarColorIsGradient {
            get {
                return ((bool)(this["StatusBarColorIsGradient"]));
            }
            set {
                this["StatusBarColorIsGradient"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int StatusBarWidthPadding {
            get {
                return ((int)(this["StatusBarWidthPadding"]));
            }
            set {
                this["StatusBarWidthPadding"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int StatusBarHeightPadding {
            get {
                return ((int)(this["StatusBarHeightPadding"]));
            }
            set {
                this["StatusBarHeightPadding"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double StatusBarOpacity {
            get {
                return ((double)(this["StatusBarOpacity"]));
            }
            set {
                this["StatusBarOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool DisplayStatusBarScrollActions {
            get {
                return ((bool)(this["DisplayStatusBarScrollActions"]));
            }
            set {
                this["DisplayStatusBarScrollActions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int TrayIconYAlignment {
            get {
                return ((int)(this["TrayIconYAlignment"]));
            }
            set {
                this["TrayIconYAlignment"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Segoe UI Semibold, 9pt, style=Bold")]
        public global::System.Drawing.Font StatusBarFontStyle {
            get {
                return ((global::System.Drawing.Font)(this["StatusBarFontStyle"]));
            }
            set {
                this["StatusBarFontStyle"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeRequired {
            get {
                return ((bool)(this["UpgradeRequired"]));
            }
            set {
                this["UpgradeRequired"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color StatusBarTextColor {
            get {
                return ((global::System.Drawing.Color)(this["StatusBarTextColor"]));
            }
            set {
                this["StatusBarTextColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StatusBarTextColorIsGradient {
            get {
                return ((bool)(this["StatusBarTextColorIsGradient"]));
            }
            set {
                this["StatusBarTextColorIsGradient"] = value;
            }
        }
    }
}
